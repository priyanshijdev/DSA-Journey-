 Input: s = "the sky is blue"
Output: "blue is sky the"


Brute force approach : TC:O(n) and space O(n)

    string reverseWords(string s) {
        stack<string> st;
        string word = "";
        
        for (int i = 0; i < s.size(); ++i) {
            if (s[i] == ' ') {
                if (!word.empty()) {
                    st.push(word);
                    word = "";
                }
            } else {
                word += s[i];
            }
        }

        // Push the last word if there is one
        if (!word.empty()) {
            st.push(word);
        }

        string ans = "";
        while (!st.empty()) {
            ans += st.top();
            st.pop();
            if (!st.empty()) ans += " ";
        }

        return ans;
    }


Optimised approach:


    string reverseWords(string s) {
        
        int left = 0;
    int right = s.length()-1;
    
    string temp="";
    string ans="";
    
    while (left <= right) {
        char ch= s[left];
        if (ch != ' ') {
            temp += ch;
        } else if (ch == ' ') {
            if (ans!="") ans = temp + " " + ans;
            else ans = temp;
            temp = "";
        }
        left++;
    }
        if (temp!="") {
        if (ans!="") ans = temp + " " + ans;
        else ans = temp;
    }
    
    return ans;  
    }
