LC:169
 1st brute-> sort() then return a[n/2];

        // brute just iterate
        int n= nums.size();
        map<int, int> mpp;
        for(int i=0; i<n; i++){
            mpp[nums[i]]++;
        }
        // searching for majority ele:
         for(auto it: mpp){
            if(it.second> (n/2))
            return it.first;
         }
         return -1;
    }

Optimal approach :
Moore voting Algo:

    int majorityElement(vector<int>& nums) {
        int count=0, element=0;
        for(int x: nums){
            if(count == 0){
                element = x;
            }
            if(x == element){
                count++;
            }
            else {
                count--;
            }
        }
        return element;
    }
